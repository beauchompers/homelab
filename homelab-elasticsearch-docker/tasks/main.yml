---
# tasks file for homelab-elasticsearch-docker

- name: Set vm.map_map_count for cluster
  ansible.posix.sysctl:
    name: vm.max_map_count
    value: 262144
    state: present
  when: cluster_type != "single"

- name: Copy Docker Compose Project
  ansible.builtin.copy:
    src: elasticsearch
    dest: "/home/{{ login_user }}"

- name: Copy Single Node template for Elastic w/TLS 
  ansible.builtin.template:
    src: elastic-docker-tls.yml.j2
    dest: "/home/{{ login_user }}/elasticsearch/elastic-docker-tls.yml"
  when: cluster_type == "single"

- name: Copy Cluster template for Elastic w/TLS
  ansible.builtin.template:
    src: elastic-docker-tls-cluster.yml.j2
    dest: "/home/{{ login_user }}/elasticsearch/elastic-docker-tls.yml"
  when: cluster_type != "single"

- name: Copy .env template 
  ansible.builtin.template:
    src: env.j2
    dest: "/home/{{ login_user }}/elasticsearch/.env"

- name: Run docker compose with create-certs
  ansible.builtin.command:
    cmd: "docker-compose -f create-certs.yml run --rm create_certs"
    creates: "/home/{{ login_user }}/elastic.txt"
    chdir: "/home/{{ login_user }}/elasticsearch"
  when: not ansible_check_mode

- name: Run docker compose to bring up Elasticsearch w/Kibana
  ansible.builtin.command:
    cmd: "docker-compose -f elastic-docker-tls.yml up -d"
    creates: "/home/{{ login_user }}/elastic.txt"
    chdir: "/home/{{ login_user }}/elasticsearch"
  when: not ansible_check_mode

# - name: Get API keys
#   ansible.builtin.uri:
#     url: "{{ elastic_url}}/_security/api_key"
#     method: GET
#     validate_certs: no
#     url_username: "elastic"
#     url_password: "{{ elastic_password }}"
#     headers: "Accept=application/json"
#   register: api_keys
#   until: not api_keys.failed|bool
#   retries: 3
#   delay: 120
#   when: 
#   - not ansible_check_mode
#   - elastic_api_key|bool

- name: Create API Key
  ansible.builtin.uri:
    url: "{{ elastic_url}}/_security/api_key"
    method: POST
    validate_certs: no
    url_username: "{{ elastic_username }}"
    url_password: "{{ elastic_password }}"
    headers: "Accept=application/json"
    body: "{{ lookup('ansible.builtin.file','{{ elastic_api_key_file_name }}') }}"
    body_format: json
  register: api_key
  until: not api_key.failed|bool
  retries: 3
  delay: 45
  when:
  # - api_keys.json.api_keys | selectattr('name','equalto',api_key_name) | list | count == 0 
  - not ansible_check_mode
  - elastic_api_key|bool

- name: Set Elastic API Key Fact
  set_fact: es_api_key="{{ api_key.json.encoded }}"
  when:
  # - api_keys.json.api_keys | selectattr('name','equalto',api_key_name) | list | count == 0
  - elastic_api_key|bool 

- name: Print Elastic API Key
  ansible.builtin.debug:
    var: es_api_key
  when:
  # - api_keys.json.api_keys | selectattr('name','equalto',api_key_name) | list | count == 0
  - elastic_api_key|bool 

- name: Create ES file to stop commands above
  ansible.builtin.file:
    path: "/home/{{ login_user }}/elastic.txt"
    state: touch
